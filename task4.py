# -*- coding: utf-8 -*-
"""Task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RACT0wPM7ZIJ5axeGl8Dsq9l_kRWLDDF

###### Assessment

###### I am going to provide two .csv files , you are supposed to work on them and have to provide solutions to the following problems

###### import necessary libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""###### merge those two csv files (after getting as dataframes, get them as a single dataframe)"""

df = pd.concat(
    map(pd.read_csv, ['/content/college_1.csv', '/content/college_2.csv']), ignore_index=True)
print(df)

"""###### Take each csv file , split that csv file into multiple categories (example csv files are added in the repo)

###### consider if the codekata score exceeds 15000 points(present week) then make a csv on those observations as Exceeded expectations.csv

###### if  10000<codekata score<15000   (Reached_expectations.csv)

###### if  7000<codekata score<10000   (Needs_Improvement.csv)

###### if  codekate score < 7000        (Unsatisfactory.csv)
"""

exc_exp = df[df['CodeKata Score']>15000]
exc_exp.to_csv('Exceeded_expectations.csv', index=False)
print(pd.read_csv("Exceeded_expectations.csv"))

rea_exp = df[df['CodeKata Score']<15000]
rea_exp.to_csv('Reached_expectations.csv', index=False)
print(pd.read_csv("Reached_expectations.csv"))

needs_impv = df[df['CodeKata Score']<10000]
needs_impv.to_csv('Needs_improvement.csv', index=False)
print(pd.read_csv("Needs_improvement.csv"))

unsatisfactory = df[df['CodeKata Score']<7000]
unsatisfactory.to_csv('Unsatisfactory.csv', index=False)
print(pd.read_csv("Unsatisfactory.csv"))

"""###### Average of previous week geekions vs this week geekions (i.e Previous Geekions vs CodeKata Score)"""

PG = df['Previous Geekions'].mean()
print(PG)

CS = df['CodeKata Score'].mean()
print(CS)

"""###### No of students participated """

print('Number of students Participated', len(df.index))

"""###### #Average completion of python course or my_sql or python english or computational thinking"""



"""###### rising star of the week (top 3 candidate who performed well in that particular week)"""

df.nlargest(3, ['Rising'])

df.nlargest(3, ['CodeKata Score'])

"""###### Shining stars of the week (top 3 candidates who has highest geekions)"""

df.nlargest(3, ['Previous Geekions'])

"""###### Department wise codekata performence (pie chart)"""

import plotly.express as px
fig=px.pie(df,names='Department',values='CodeKata Score',title='Department wise codekata performence')
fig

"""###### Department wise toppers (horizantal bar graph or any visual representations of your choice)"""

Topper=px.scatter(df,x='Department',y='CodeKata Score',size='CodeKata Score',color='CodeKata Score',hover_data=['Name'],title='Department wise Topper')
Topper





